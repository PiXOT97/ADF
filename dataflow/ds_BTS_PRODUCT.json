{
	"name": "ds_BTS_PRODUCT",
	"properties": {
		"folder": {
			"name": "ds_PROFI/ds_BTS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_main_ParquetPath",
						"type": "DatasetReference"
					},
					"name": "ProductDataFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_main_ParquetPath",
						"type": "DatasetReference"
					},
					"name": "OutputParquet"
				}
			],
			"transformations": [
				{
					"name": "DropAndRename"
				},
				{
					"name": "AddAdditionalCol"
				}
			],
			"scriptLines": [
				"parameters{",
				"     file_to_processs as string",
				"}",
				"source(output(",
				"          catalog_name as string,",
				"          catalog_id as integer,",
				"          brand as string,",
				"          brand_id as integer,",
				"          product_name as string,",
				"          product_id as integer,",
				"          sku_name as string,",
				"          ssku_id as integer,",
				"          product_code as integer,",
				"          sku_code as string,",
				"          prod_stru_id as integer,",
				"          barcode as long,",
				"          article_uv as short,",
				"          article_name_ro as string,",
				"          sku_name_ro as string,",
				"          article_level_01 as string,",
				"          article_level_01_name as string,",
				"          article_level_01_name_en as string,",
				"          article_level_01_desc as string,",
				"          article_level_01_desc_en as string,",
				"          article_level_02 as string,",
				"          article_level_02_name as string,",
				"          article_level_02_name_en as string,",
				"          article_level_02_desc as string,",
				"          article_level_02_desc_en as string,",
				"          article_level_03 as string,",
				"          article_level_03_name as string,",
				"          article_level_03_name_en as string,",
				"          article_level_03_desc as string,",
				"          article_level_03_desc_en as string,",
				"          article_level_04 as string,",
				"          article_level_04_name as string,",
				"          article_level_04_name_en as string,",
				"          article_level_04_desc as string,",
				"          article_level_04_desc_en as string,",
				"          article_level_05 as string,",
				"          article_level_05_name as string,",
				"          article_level_05_name_en as string,",
				"          article_level_05_desc as string,",
				"          article_level_05_desc_en as string,",
				"          article_level_06 as string,",
				"          article_level_06_name as string,",
				"          article_level_06_name_en as string,",
				"          article_level_06_desc as string,",
				"          article_level_06_desc_en as string,",
				"          article_level_07 as string,",
				"          article_level_07_name as string,",
				"          article_level_07_name_en as string,",
				"          article_level_07_desc as string,",
				"          article_level_07_desc_en as string,",
				"          article_level_08 as string,",
				"          article_level_08_name as string,",
				"          article_level_08_name_en as string,",
				"          article_level_08_desc as string,",
				"          article_level_08_desc_en as string,",
				"          article_status_code as integer,",
				"          article_status_name as string,",
				"          article_status_name_en as string,",
				"          article_natura_code as integer,",
				"          article_natura_name as string,",
				"          article_stock_unit_code as integer,",
				"          article_stock_unit_name as string,",
				"          article_stock_unit_name_en as string,",
				"          sku_unit_code as short,",
				"          sku_unit_name as string,",
				"          sku_unit_name_en as string,",
				"          sku_weight as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ProductDataFile",
				"ProductDataFile select(mapColumn(",
				"          externalCatalogName = catalog_name,",
				"          externalCatalogId = catalog_id,",
				"          externalBrandName = brand,",
				"          externalBrandId = catalog_id,",
				"          externalSkuName = product_name,",
				"          externalSkuId = product_id,",
				"          barcode,",
				"          articleLevelId1 = article_level_01,",
				"          articleLevel1 = article_level_01_name,",
				"          articleLevelId2 = article_level_02,",
				"          articleLevel2 = article_level_02_name,",
				"          articleLevelId3 = article_level_03,",
				"          articleLevel3 = article_level_03_name,",
				"          articleLevelId4 = article_level_04,",
				"          articleLevel4 = article_level_04_name,",
				"          articleLevelId5 = article_level_05,",
				"          articleLevel5 = article_level_05_name,",
				"          articleLevelId6 = article_level_06,",
				"          articleLevel6 = article_level_06_name,",
				"          articleLevelId7 = article_level_07,",
				"          articleLevel7 = article_level_07_name,",
				"          articleLevelId8 = article_level_08,",
				"          articleLevel8 = article_level_08_name,",
				"          articleStatusCode = article_status_code,",
				"          articleStatus = article_status_name,",
				"          articleNaturaCode = article_natura_code,",
				"          articleNaturaName = article_natura_name,",
				"          stockUnitCode = article_stock_unit_code,",
				"          stockUnit = article_stock_unit_name,",
				"          skuUnitCode = sku_unit_code,",
				"          skuUnit = sku_unit_name,",
				"          skuWeight = sku_weight",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DropAndRename",
				"DropAndRename derive(catalogId = '',",
				"          brandId = '',",
				"          skuId = '') ~> AddAdditionalCol",
				"AddAdditionalCol sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutputParquet"
			]
		}
	}
}